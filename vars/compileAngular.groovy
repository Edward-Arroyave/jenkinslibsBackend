/**
 * Pipeline step para instalar dependencias de Node.js y compilar una aplicaci√≥n Angular.
 *
 * @param config Map con configuraci√≥n esperada:
 *   - repoPath (String): Ruta local donde se encuentra el c√≥digo fuente de Angular.
 *   - distPath (String): Ruta donde se espera que se genere la carpeta compilada (build output).
 *
 * Pasos realizados:
 *   1. Valida que los par√°metros obligatorios existan.
 *   2. Ejecuta 'npm install' para instalar dependencias en repoPath.
 *   3. Ejecuta el comando de compilaci√≥n Angular con optimizaci√≥n para producci√≥n.
 *   4. Verifica que la carpeta de compilaci√≥n distPath exista.
 */
def call(Map config) {
    // Validar par√°metros obligatorios
    if (!config.repoPath) error "Falta el par√°metro obligatorio: repoPath"
    if (!config.distPath) error "Falta el par√°metro obligatorio: distPath"

    def repoPath = config.repoPath
    def distPath = config.distPath

    // Instalar dependencias de Node.js usando npm
    echo "üì• Instalando dependencias..."
    dir(repoPath) {
        sh 'npm install -f'
    }
    echo "‚úÖ Dependencias instaladas"

    // Compilar la aplicaci√≥n Angular con flags para producci√≥n y optimizaci√≥n
    echo "‚öôÔ∏è Compilando Angular..."
    dir(repoPath) {
        sh 'node --max-old-space-size=9096 ./node_modules/.bin/ng build --aot --configuration production --optimization'
    }
    echo "‚úÖ Compilaci√≥n completada"

    // Verificar que la carpeta de compilaci√≥n exista para validar √©xito del build
    echo "üìÇ Verificando carpeta: ${distPath}"
    if (!fileExists(distPath)) {
        error "‚ùå ERROR: No se encontr√≥ la carpeta compilada en ${distPath}"
    }
    echo "‚úÖ Carpeta compilada encontrada"
}
