def call(Map config) {
    // Obtener duraci√≥n real del build
    def durationMillis = currentBuild.duration ?: (currentBuild.getTimeInMillis() - currentBuild.getStartTimeInMillis())
    def totalSeconds = durationMillis / 1000.0
    def hours = Math.floor(totalSeconds / 3600).toInteger()
    def minutes = Math.floor((totalSeconds - (hours * 3600)) / 60).toInteger()
    def seconds = totalSeconds - (hours * 3600) - (minutes * 60)

    def durationText = ""
    if (hours > 0) { durationText += "${hours}h " }
    if (minutes > 0) { durationText += "${minutes}m " }
    durationText += String.format("%.1f", seconds) + "s"

    def status = currentBuild.currentResult ?: "FAILURE"
    
    // Mapa de estados base
    def statusMap = [
        "SUCCESS" : [color: "00FF00", emoji: "‚úÖ", statusText: "Build Succeeded", logEmoji: "üéâ"],
        "UNSTABLE": [color: "FFFF00", emoji: "‚ö†Ô∏è", statusText: "Build Unstable", logEmoji: "‚ö°"],
        "ABORTED" : [color: "FFA500", emoji: "‚èπÔ∏è", statusText: "Build Aborted", logEmoji: "‚èπÔ∏è"],
        "FAILURE" : [color: "FF0000", emoji: "‚ùå", statusText: "Build Failed", logEmoji: "üí•"]
    ]

    // Valores por defecto seg√∫n el estado actual
    def (color, emoji, statusText, logEmoji) = statusMap[status]?.values() ?: statusMap["FAILURE"].values()

    // Reglas adicionales seg√∫n config
    if (config.APIS_FAILURE) {
        if (!config.APIS_SUCCESSFUL) {
            (color, emoji, statusText, logEmoji) = statusMap["UNSTABLE"].values()
            status = "UNSTABLE"
        } else {
            (color, emoji, statusText, logEmoji) = statusMap["FAILURE"].values()
            status = "FAILURE"
        }
    }


    try {
        if (PRODUCT == "AGENDAMIENTO") {
            withCredentials([string(credentialsId: 'WEBHOOK_HEALTHBOOK', variable: 'WEBHOOK_URL')]) {
                
                echo ""
                echo "üìä =========================== REPORTE DE EJECUCI√ìN ==========================="
                echo "üìå Estado del Proceso: ${statusText}"
                echo "üë§ Usuario que ejecut√≥: ${env.BUILD_USER_ID}"
                echo "üåç Entorno: ${config.ENVIRONMENT ?: 'No definido'}"
                echo "‚è±Ô∏è Duraci√≥n total: ${durationText}"
                echo "üî¢ Proceso: ${env.JOB_NAME} #${env.BUILD_NUMBER}"
                echo "üìß Correo del Usuario: ${env.BUILD_USER_EMAIL ?: 'No disponible'}"
                if (env.COMMIT_AUTHOR) {
                    echo "üë®‚Äçüíª Autor del Commit: ${env.COMMIT_AUTHOR}"
                }
                if (env.COMMIT_MESSAGE) {
                    echo "üìù Mensaje del Commit: ${env.COMMIT_MESSAGE.take(80)}${env.COMMIT_MESSAGE.length() > 80 ? '...' : ''}"
                }
                if (env.COMMIT_HASH) {
                    echo "üîó Hash de Commit: ${env.COMMIT_HASH.take(8)}"
                }

                echo "‚úÖ APIs procesadas con √©xito: ${config.APIS_SUCCESSFUL ?: 'Ninguna'}"
                echo "‚ùå APIs con errores: ${config.APIS_FAILURE ?: 'Ninguna'}"
                echo "============================================================================="
                echo ""

                // Enviar notificaci√≥n a Teams
                office365ConnectorSend(
                    status: status,
                    webhookUrl: WEBHOOK_URL,
                    message: """
                    Buen d√≠a ingenieros.  
                    Les informamos el estado del proceso de despliegue ejecutado:  
                    Proceso: **${env.JOB_NAME} #${env.BUILD_NUMBER}**  
                    Agradecemos su atenci√≥n y quedamos atentos a observaciones o comentarios adicionales. 
                    """,
                    adaptiveCards: true,
                    color: color,
                    factDefinitions: [
                        [name: "üìå Estado Final", template: "**${statusText} ${emoji}**"],
                        [name: "üë§ Usuario ejecutor", template: "_${env.BUILD_USER}_"],
                        [name: "üìß Usuario correo", template: "_${env.BUILD_USER_EMAIL}_"],
                        [name: "üåç Entorno", template: "**${config.ENVIRONMENT}**"],
                        [name: "üë®‚Äçüíª Autor del Commit", template: "${env.COMMIT_AUTHOR}"],
                        [name: "üìù Commit", template: "${env.COMMIT_MESSAGE}"],
                        [name: "üîó Hash del Commit", template: "`${env.COMMIT_HASH} `"],
                        [name: "‚è±Ô∏è Duraci√≥n", template: "` ${durationText} `"],
                        [name: "‚úÖ APIs Exitosas", template: "**${config.APIS_SUCCESSFUL ?: 'Ninguna'}**"],
                        [name: "‚ùå APIs con Errores", template: "**${config.APIS_FAILURE ?: 'Ninguna'}**"],
                    ]
                )

            }
        }else{
            // Usar withBuildUser para acceder a las variables del plugin
            withBuildUser {
                // Logs empresariales para Ocean/consola
                echo ""
                echo "üìä =========================== REPORTE DE EJECUCI√ìN ==========================="
                echo "üìå Estado del Proceso: ${statusText}"
                echo "üë§ Usuario que ejecut√≥: ${env.BUILD_USER_ID}"
                echo "üåç Entorno: ${config.ENVIRONMENT ?: 'No definido'}"
                echo "‚è±Ô∏è Duraci√≥n total: ${durationText}"
                echo "üî¢ Proceso: ${env.JOB_NAME} #${env.BUILD_NUMBER}"
                echo "üìß Correo del Usuario: ${env.BUILD_USER_EMAIL ?: 'No disponible'}"
                if (env.COMMIT_AUTHOR) {
                    echo "üë®‚Äçüíª Autor del Commit: ${env.COMMIT_AUTHOR}"
                }
                if (env.COMMIT_MESSAGE) {
                    echo "üìù Mensaje del Commit: ${env.COMMIT_MESSAGE.take(80)}${env.COMMIT_MESSAGE.length() > 80 ? '...' : ''}"
                }
                if (env.COMMIT_HASH) {
                    echo "üîó Hash de Commit: ${env.COMMIT_HASH.take(8)}"
                }

                echo "‚úÖ APIs procesadas con √©xito: ${config.APIS_SUCCESSFUL ?: 'Ninguna'}"
                echo "‚ùå APIs con errores: ${config.APIS_FAILURE ?: 'Ninguna'}"
                echo "============================================================================="
                echo ""

                // Enviar notificaci√≥n a Teams
                try {
                office365ConnectorSend(
                    status: status,
                    webhookUrl: bandera ? 'WEBHOOK_HEALTHBOOK' : '',
                    message: """
                    Buen d√≠a ingenieros.  
                    Les informamos el estado del proceso de despliegue ejecutado:  
                    Proceso: **${env.JOB_NAME} #${env.BUILD_NUMBER}**  
                    Agradecemos su atenci√≥n y quedamos atentos a observaciones o comentarios adicionales. 
                    """,
                    adaptiveCards: true,
                    color: color,
                    factDefinitions: [
                        [name: "üìå Estado Final", template: "**${statusText} ${emoji}**"],
                        [name: "üë§ Usuario ejecutor", template: "_${env.BUILD_USER}_"],
                        [name: "üìß Usuario correo", template: "_${env.BUILD_USER_EMAIL}_"],
                        [name: "üåç Entorno", template: "**${config.ENVIRONMENT}**"],
                        [name: "üë®‚Äçüíª Autor del Commit", template: "${env.COMMIT_AUTHOR}"],
                        [name: "üìù Commit", template: "${env.COMMIT_MESSAGE}"],
                        [name: "üîó Hash del Commit", template: "`${env.COMMIT_HASH} `"],
                        [name: "‚è±Ô∏è Duraci√≥n", template: "` ${durationText} `"],
                        [name: "‚úÖ APIs Exitosas", template: "**${config.APIS_SUCCESSFUL ?: 'Ninguna'}**"],
                        [name: "‚ùå APIs con Errores", template: "**${config.APIS_FAILURE ?: 'Ninguna'}**"],
                    ]
                )



            echo "üì¢ Notificaci√≥n enviada a Microsoft Teams de manera exitosa."
        } catch (Exception e) {
            echo "‚ö†Ô∏è No fue posible enviar la notificaci√≥n a Teams: ${e.message}"
            echo "üìã La informaci√≥n fue presentada en consola."
        }

        // Log final formal
        echo "${logEmoji} Estado Final: ${statusText} | Duraci√≥n: ${durationText}"
        echo ""
    }
        }
    } catch (err) {
        echo "‚ö†Ô∏è Error al enviar notificaci√≥n a Teams: ${err}"
    }

    }
}